name: v5 Branch - Push

#on:
#  push:
#    branches: [v5]

on:
  pull_request:
    branches: [next, v5]

env:
  NODE_OPTIONS: --max_old_space_size=4096
  AWS_REGION: eu-central-1

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      cypress-folders: ${{ steps.list-cypress-folders.outputs.cypress-folders }}
      jest-packages: ${{ steps.list-jest-packages.outputs.jest-packages }}
      ts: ${{ steps.get-timestamp.outputs.ts }}
      webiny-version: ${{ steps.get-webiny-version.outputs.webiny-version }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - uses: actions/checkout@v2

      - name: Get current version of Webiny
        id: get-webiny-version
        run: echo "::set-output name=webiny-version::$(node --eval "console.log(require('./lerna.json').version)")"

      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=ts::$(node --eval "console.log(new Date().getTime())")"

      - name: List packages with Jest tests
        id: list-jest-packages
        run: echo "::set-output name=jest-packages::$(node scripts/listPackagesWithTests.js)"

      - name: List Cypress tests folders
        id: list-cypress-folders
        run: echo "::set-output name=cypress-folders::$(node scripts/listCypressTestsFolders.js)"

  e2e:
    needs: init
    name: End-to-end tests
    runs-on: ubuntu-latest
    environment: next
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ needs.init.outputs.ts }}_
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      WEBINY_PULUMI_BACKEND: ${{ secrets.WEBINY_PULUMI_BACKEND }}_${{ needs.init.outputs.ts }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 12

#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          path: webiny-js

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: webiny-js
          # Prevents the detached HEAD problem (https://github.com/actions/checkout/issues/124)
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: webiny-js/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('webiny-js/**/yarn.lock') }}

      - uses: actions/cache@v2
        id: cached-packages
        with:
          path: webiny-js/.webiny/cached-packages
          key: ${{ runner.os }}-${{ needs.init.outputs.webiny-version }}-${{ secrets.RANDOM_CACHE_KEY_SUFFIX }}

      - name: Install dependencies
        working-directory: webiny-js
        if: steps.yarn-cache.outputs.cache-hit != 'true' || steps.cached-packages.outputs.cache-hit != 'true'
        run: yarn --immutable

      - name: Build packages
        working-directory: webiny-js
        if: steps.cached-packages.outputs.cache-hit != 'true'
        run: node scripts/buildWithCache.js

      # Publish built packages to Verdaccio.
      - name: Start Verdaccio local server
        working-directory: webiny-js
        run: npx pm2 start verdaccio -- -c .verdaccio.yaml

      - name: Create ".npmrc" file in the project root, with a dummy auth token
        working-directory: webiny-js
        run: echo '//localhost:4873/:_authToken="dummy-auth-token"' > .npmrc

      - name: Configure NPM to use local registry
        working-directory: webiny-js
        run: npm config set registry http://localhost:4873

      - name: Set git email
        working-directory: webiny-js
        run: git config --global user.email "webiny-bot@webiny.com"

      - name: Set git username
        working-directory: webiny-js
        run: git config --global user.name "webiny-bot"

      - name: Version packages (no push, no changelog)
        working-directory: webiny-js

        run: yarn lerna:version:verdaccio
      - name: Release to Verdaccio
        working-directory: webiny-js
        run: yarn lerna:publish:verdaccio

      - name: Create verdaccio-files artifact
        uses: actions/upload-artifact@v2
        with:
          name: verdaccio-files
          retention-days: 1
          path: |
            webiny-js/.verdaccio/
            webiny-js/.verdaccio.yaml

      # Create a new Webiny project, deploy it, and complete the installation wizard.
      - name: Disable Webiny telemetry
        run: >
          mkdir ~/.webiny &&
          echo '{ "id": "ci", "telemetry": false }' > ~/.webiny/config

      - name: Create a new Webiny project
        working-directory: xyz
        run: >
          npx create-webiny-project@next test-project
          --tag next --no-interactive
          --assign-to-yarnrc '{"npmRegistryServer":"http://localhost:4873","unsafeHttpWhitelist":["localhost"]}'
          --template-options '{"region":"${{ env.AWS_REGION }}","storageOperations":"ddb-es"}'

      - name: Print CLI version
        working-directory: xyz/test-project
        run: yarn webiny --version

      - name: Reduce prerendering service's process-queue schedule
        working-directory: xyz/test-project
        run: sed -i 's/5 minutes/1 minute/g' api/pulumi/dev/prerenderingService.ts

      - name: Create project-files artifact
        uses: actions/upload-artifact@v2
        with:
          name: project-files
          retention-days: 1
          path: |
            test-project/
            !test-project/node_modules/**/*
            !test-project/**/node_modules/**/*
            !test-project/.yarn/cache/**/*

      - name: Deploy API
        working-directory: xyz/test-project
        run: yarn webiny deploy api --env dev --debug

      - name: Deploy Admin Area
        working-directory: xyz/test-project
        run: yarn webiny deploy apps/admin --env dev --debug

      - name: Deploy Website
        working-directory: xyz/test-project
        run: yarn webiny deploy apps/website --env dev --debug

      # Run the installation wizard.
      - name: Set up Cypress config
        working-directory: webiny-js
        run: yarn setup-cypress

      - name: Cypress - run installation wizard test
        working-directory: webiny-js
        run: yarn cypress run --spec "cypress/integration/adminInstallation/**/*.spec.js"

      - name: Upload screenshots to Slack
        uses: trymbill/cypress-slack-video-upload-action@v1.3.0
        if: failure()
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channels: C027VQG8080
          workdir: webiny-js/cypress
          message-text: Could not complete Admin Area installation wizard. Screenshots have been placed in this thread, good luck.

  cypress-tests-admin-area:
    needs: [init, e2e]
    name: ${{ matrix.cypress-folder }} (${{ matrix.os }}, Node v${{ matrix.node }})
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        node: [ 14 ]
        cypress-folder: ${{ fromJson(needs.init.outputs.cypress-folders) }}
    runs-on: ubuntu-latest
    environment: next
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ELASTIC_SEARCH_DOMAIN_NAME: ${{ secrets.AWS_ELASTIC_SEARCH_DOMAIN_NAME }}
      ELASTIC_SEARCH_INDEX_PREFIX: ${{ needs.init.outputs.ts }}_
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      WEBINY_PULUMI_BACKEND: ${{ secrets.WEBINY_PULUMI_BACKEND }}_${{ needs.init.outputs.ts }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
    steps:
      #      - uses: actions/checkout@v2
      #        with:
      #          fetch-depth: 0
      #          path: webiny-js

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: webiny-js
          # Prevents the detached HEAD problem (https://github.com/actions/checkout/issues/124)
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/cache@v2
        with:
          path: webiny-js/.webiny/cached-packages
          key: ${{ runner.os }}-${{ needs.init.outputs.webiny-version }}-${{ secrets.RANDOM_CACHE_KEY_SUFFIX }}

      - uses: actions/cache@v2
        with:
          path: webiny-js/.yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        working-directory: webiny-js
        run: yarn --immutable

      - name: Build packages
        working-directory: webiny-js
        run: node scripts/buildWithCache.js

      - name: Set up Cypress config
        working-directory: webiny-js
        run: yarn setup-cypress

      - name: Cypress - run "${{ matrix.cypress-folder }}" tests
        working-directory: webiny-js
        run: yarn cypress run --spec "${{ matrix.cypress-folder }}"

      - name: Upload screenshots to Slack
        uses: trymbill/cypress-slack-video-upload-action@v1.3.0
        if: failure()
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channels: C027VQG8080
          workdir: webiny-js/cypress
          message-text: Cypress tests failed! Screenshots have been placed in this thread, good luck.
